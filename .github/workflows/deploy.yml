name: Deploy to EC2

on:
  push:
    branches: [ deploy ]

env:
  IMAGE_NAME: ai-bot
  EC2_HOST: ec2-52-37-221-188.us-west-2.compute.amazonaws.com
  EC2_USER: ubuntu

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Create deployment package
      run: |
        # Create deployment directory
        mkdir deploy
        cp -r * deploy/
        cp .env deploy/
        
        # Create tar file
        tar -czf deploy.tar.gz -C deploy .
        
        # Show size
        echo "Deployment package size:"
        ls -lh deploy.tar.gz

    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_KEY }}" | sed 's/\\n/\n/g' > ~/.ssh/ec2.pem
        chmod 600 ~/.ssh/ec2.pem
        ssh-keyscan -H ${{ env.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Copy files to EC2
      run: |
        scp -i ~/.ssh/ec2.pem deploy.tar.gz ${{ env.EC2_USER }}@${{ env.EC2_HOST }}:~/deploy.tar.gz

    - name: Deploy on EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.EC2_HOST }}
        username: ${{ env.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          # Cleanup old deployment
          rm -rf ~/app
          mkdir -p ~/app
          
          # Extract new files
          cd ~/app
          tar -xzf ~/deploy.tar.gz
          rm ~/deploy.tar.gz
          
          # Stop existing containers
          docker-compose down || true
          
          # Build and start new containers
          docker-compose up -d --build
          
          # Show logs
          sleep 5
          echo "Container Status:"
          docker-compose ps
          echo "Container Logs:"
          docker-compose logs 