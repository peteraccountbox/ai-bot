name: Deploy to EC2

on:
  push:
    branches: [ main ]

env:
  IMAGE_NAME: ai-bot
  EC2_HOST: ec2-52-37-221-188.us-west-2.compute.amazonaws.com
  EC2_USER: ubuntu

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Build Docker image
      run: |
        docker build -t ${{ env.IMAGE_NAME }}:latest .
        docker save ${{ env.IMAGE_NAME }}:latest > image.tar
        gzip image.tar
        
        # Print image sizes
        echo "Original image size:"
        docker images ${{ env.IMAGE_NAME }}:latest --format "{{.Size}}"
        
        echo "Compressed tar size:"
        ls -lh image.tar.gz | awk '{print $5}'
        
        # Get size in bytes for verification
        stat -f%z image.tar.gz || stat -c%s image.tar.gz

    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_KEY }}" | sed 's/\\n/\n/g' > ~/.ssh/ec2.pem
        chmod 600 ~/.ssh/ec2.pem
        ssh-keyscan -H ${{ env.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Copy Docker image to EC2
      run: |
        echo "Starting file transfer of size:"
        ls -lh image.tar.gz
        scp -i ~/.ssh/ec2.pem image.tar.gz ${{ env.EC2_USER }}@${{ env.EC2_HOST }}:~/image.tar.gz

    - name: Deploy on EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.EC2_HOST }}
        username: ${{ env.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          echo "Checking received file size:"
          ls -lh ~/image.tar.gz
          
          echo "Stopping existing container..."
          docker stop ${{ env.IMAGE_NAME }} || true
          docker rm ${{ env.IMAGE_NAME }} || true
          
          echo "Loading new image..."
          gunzip -f ~/image.tar.gz
          docker load < ~/image.tar
          
          echo "Starting new container..."
          docker run -d \
            --name ${{ env.IMAGE_NAME }} \
            -p 8181:8181 \
            -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
            ${{ env.IMAGE_NAME }}:latest
          
          echo "Cleanup..."
          rm ~/image.tar
          
          echo "Container status:"
          docker ps
          echo "Container logs:"
          docker logs ${{ env.IMAGE_NAME }} 