name: Deploy to EC2

on:
  push:
    branches: [ deploy ]

env:
  IMAGE_NAME: ai-bot
  EC2_HOST: ec2-52-37-221-188.us-west-2.compute.amazonaws.com
  EC2_USER: ubuntu

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version  # Verify installation

    - name: Build Docker image using docker-compose
      run: |
        # Create .env file for build
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > .env
        
        # Build the image
        docker-compose build
        
        # Save the image
        docker save ai-bot_app > image.tar
        gzip image.tar
        
        # Show image size
        echo "Image size:"
        ls -lh image.tar.gz

    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_KEY }}" | sed 's/\\n/\n/g' > ~/.ssh/ec2.pem
        chmod 600 ~/.ssh/ec2.pem
        ssh-keyscan -H ${{ env.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Copy Docker image to EC2
      run: |
        echo "Copying image to EC2..."
        scp -i ~/.ssh/ec2.pem image.tar.gz ${{ env.EC2_USER }}@${{ env.EC2_HOST }}:~/image.tar.gz

    - name: Deploy on EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.EC2_HOST }}
        username: ${{ env.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          # Clean up any previous deployment
          docker-compose down || echo "No running containers to stop"
          
          # Load and extract the image
          cd ~
          gunzip image.tar.gz
          docker load < image.tar
          rm image.tar

          # Start the new containers
          cd ~/app
          docker-compose up -d --build
          
          # Display container status and logs
          sleep 5
          echo "Container Status:"
          docker-compose ps
          echo "Container Logs:"
          docker-compose logs
