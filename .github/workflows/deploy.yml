name: Deploy to EC2

on:
  push:
    branches: [ main ]

env:
  CONTAINER_NAME: ai-bot
  EC2_HOST: ec2-52-37-221-188.us-west-2.compute.amazonaws.com
  EC2_USER: ubuntu

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker context for remote host
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_KEY }}" > ~/.ssh/ec2.pem
        chmod 600 ~/.ssh/ec2.pem

    - name: Copy Docker files to EC2
      run: |
        scp -i ~/.ssh/ec2.pem -o StrictHostKeyChecking=no \
          Dockerfile docker-compose.yml ${{ env.EC2_USER }}@${{ env.EC2_HOST }}:~/

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.EC2_HOST }}
        username: ${{ env.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          # Stop and remove existing container if it exists
          docker stop ${CONTAINER_NAME} || true
          docker rm ${CONTAINER_NAME} || true
          
          # Build and run the new image
          docker build -t ${CONTAINER_NAME}:latest .
          docker run -d \
            --name ${CONTAINER_NAME} \
            -p 8181:8181 \
            -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
            ${CONTAINER_NAME}:latest
            ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}